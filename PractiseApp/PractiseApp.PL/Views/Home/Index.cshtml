@using Microsoft.AspNetCore.Mvc.TagHelpers
@model PractiseApp.Controllers.IndexViewModel

@{
    Layout = "_Layout";
    ViewData["Title"] = "Test Records";
}

<div class="container mt-4">
    <!-- Header Section -->
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-primary">
            <i class="fas fa-list me-2"></i>Test Records
            <span class="badge bg-secondary ms-2">@Model.TotalRecords</span>
        </h2>
        <a asp-controller="Home" asp-action="Create" class="btn btn-success">
            <i class="fas fa-plus me-2"></i>Add New Record
        </a>
    </div>

    <!-- Success Message -->
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>@TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <!-- Search and Filter Section -->
    <div class="card mb-4">
        <div class="card-body">
            <form method="get" class="row g-3">
                <div class="col-md-6">
                    <label for="searchTerm" class="form-label">Search Records</label>
                    <div class="input-group">
                        <span class="input-group-text">
                            <i class="fas fa-search"></i>
                        </span>
                        <input type="text" class="form-control" id="searchTerm" name="searchTerm"
                               value="@Model.SearchTerm" placeholder="Search by name, email, or info...">
                    </div>
                </div>
                <div class="col-md-3">
                    <label for="sortBy" class="form-label">Sort By</label>
                    <select class="form-select" id="sortBy" name="sortBy">
                        <option value="">Default</option>
                        <option value="firstname" selected="@(Model.SortBy == "firstname")">First Name</option>
                        <option value="lastname" selected="@(Model.SortBy == "lastname")">Last Name</option>
                        <option value="email" selected="@(Model.SortBy == "email")">Email</option>
                        <option value="age" selected="@(Model.SortBy == "age")">Age</option>
                        <option value="testnumber" selected="@(Model.SortBy == "testnumber")">Test Number</option>
                        <option value="testdouble" selected="@(Model.SortBy == "testdouble")">Test Double</option>
                    </select>
                </div>
                <div class="col-md-2">
                    <label for="sortOrder" class="form-label">Order</label>
                    <select class="form-select" id="sortOrder" name="sortOrder">
                        <option value="asc" selected="@(Model.SortOrder != "desc")">Ascending</option>
                        <option value="desc" selected="@(Model.SortOrder == "desc")">Descending</option>
                    </select>
                </div>
                <div class="col-md-1 d-flex align-items-end">
                    <button type="submit" class="btn btn-primary me-2">
                        <i class="fas fa-filter"></i>Search
                    </button>
                    <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                        <i class="fas fa-times"></i>Null
                    </a>
                </div>
            </form>
        </div>
    </div>

    <!-- Records Table -->
    <div class="card shadow">
        <div class="card-body p-0">
            @if (Model.Records.Any())
            {
                <div class="table-responsive">
                    <table class="table table-hover mb-0">
                        <thead class="table-dark">
                        <tr>
                            <th scope="col">
                                <a href="@Url.Action("Index", new { 
                                    searchTerm = Model.SearchTerm, 
                                    sortBy = "firstname", 
                                    sortOrder = Model.SortBy == "firstname" && Model.SortOrder != "desc" ? "desc" : "asc",
                                    page = Model.CurrentPage 
                                })" class="text-white text-decoration-none">
                                    Name
                                    @if (Model.SortBy == "firstname")
                                    {
                                        <i class="fas @(Model.SortOrder == "desc" ? "fa-sort-down" : "fa-sort-up")"></i>
                                    }
                                </a>
                            </th>
                            <th scope="col">
                                <a href="@Url.Action("Index", new { 
                                    searchTerm = Model.SearchTerm, 
                                    sortBy = "email", 
                                    sortOrder = Model.SortBy == "email" && Model.SortOrder != "desc" ? "desc" : "asc",
                                    page = Model.CurrentPage 
                                })" class="text-white text-decoration-none">
                                    Email
                                    @if (Model.SortBy == "email")
                                    {
                                        <i class="fas @(Model.SortOrder == "desc" ? "fa-sort-down" : "fa-sort-up")"></i>
                                    }
                                </a>
                            </th>
                            <th scope="col">
                                <a href="@Url.Action("Index", new { 
                                    searchTerm = Model.SearchTerm, 
                                    sortBy = "age", 
                                    sortOrder = Model.SortBy == "age" && Model.SortOrder != "desc" ? "desc" : "asc",
                                    page = Model.CurrentPage 
                                })" class="text-white text-decoration-none">
                                    Age
                                    @if (Model.SortBy == "age")
                                    {
                                        <i class="fas @(Model.SortOrder == "desc" ? "fa-sort-down" : "fa-sort-up")"></i>
                                    }
                                </a>
                            </th>
                            <th scope="col">
                                <a href="@Url.Action("Index", new { 
                                    searchTerm = Model.SearchTerm, 
                                    sortBy = "testnumber", 
                                    sortOrder = Model.SortBy == "testnumber" && Model.SortOrder != "desc" ? "desc" : "asc",
                                    page = Model.CurrentPage 
                                })" class="text-white text-decoration-none">
                                    Test Number
                                    @if (Model.SortBy == "testnumber")
                                    {
                                        <i class="fas @(Model.SortOrder == "desc" ? "fa-sort-down" : "fa-sort-up")"></i>
                                    }
                                </a>
                            </th>
                            <th scope="col">
                                <a href="@Url.Action("Index", new { 
                                    searchTerm = Model.SearchTerm, 
                                    sortBy = "testdouble", 
                                    sortOrder = Model.SortBy == "testdouble" && Model.SortOrder != "desc" ? "desc" : "asc",
                                    page = Model.CurrentPage 
                                })" class="text-white text-decoration-none">
                                    Test Double
                                    @if (Model.SortBy == "testdouble")
                                    {
                                        <i class="fas @(Model.SortOrder == "desc" ? "fa-sort-down" : "fa-sort-up")"></i>
                                    }
                                </a>
                            </th>
                            <th scope="col">Additional Info</th>
                            <th scope="col" class="text-center">Actions</th>
                        </tr>
                        </thead>
                        <tbody>
                        @foreach (var item in Model.Records)
                        {
                            <tr>
                                <td class="align-middle">
                                    <strong>@Html.DisplayFor(modelItem => item.FirstName) @Html.DisplayFor(modelItem => item.LastName)</strong>
                                </td>
                                <td class="align-middle">
                                    <i class="fas fa-envelope text-muted me-1"></i>
                                    @Html.DisplayFor(modelItem => item.Email)
                                </td>
                                <td class="align-middle">
                                    <span class="badge bg-info">@Html.DisplayFor(modelItem => item.Age)</span>
                                </td>
                                <td class="align-middle">@Html.DisplayFor(modelItem => item.TestNumber)</td>
                                <td class="align-middle">@Html.DisplayFor(modelItem => item.TestDouble)</td>
                                <td class="align-middle">
                                    @if (!string.IsNullOrEmpty(item.AddingInfo))
                                    {
                                        <span class="text-truncate d-inline-block" style="max-width: 150px;" title="@item.AddingInfo">
                                            @item.AddingInfo
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                                <td class="align-middle text-center">
                                    <div class="btn-group" role="group">
                                        <a asp-controller="Home" asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary" title="Edit">
                                            <i class="fas fa-edit"></i>Edit
                                        </a>
                                        <button type="button" class="btn btn-sm btn-outline-danger" title="Delete"
                                                onclick="confirmDelete('@item.Id', '@item.FirstName @item.LastName')">
                                            <i class="fas fa-trash"></i>Delete
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>

                <!-- Pagination -->
                @if (Model.TotalPages > 1)
                {
                    <div class="card-footer">
                        <nav aria-label="Page navigation">
                            <div class="d-flex justify-content-between align-items-center">
                                <div>
                                    <small class="text-muted">
                                        Showing @((Model.CurrentPage - 1) * Model.PageSize + 1) to 
                                        @(Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalRecords)) 
                                        of @Model.TotalRecords entries
                                    </small>
                                </div>
                                <ul class="pagination pagination-sm mb-0">
                                    @if (Model.HasPreviousPage)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Index", new { 
                                                searchTerm = Model.SearchTerm, 
                                                sortBy = Model.SortBy, 
                                                sortOrder = Model.SortOrder, 
                                                page = Model.CurrentPage - 1 
                                            })">
                                                <i class="fas fa-chevron-left"></i>
                                            </a>
                                        </li>
                                    }

                                    @{
                                        var startPage = Math.Max(1, Model.CurrentPage - 2);
                                        var endPage = Math.Min(Model.TotalPages, Model.CurrentPage + 2);
                                    }

                                    @if (startPage > 1)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Index", new { 
                                                searchTerm = Model.SearchTerm, 
                                                sortBy = Model.SortBy, 
                                                sortOrder = Model.SortOrder, 
                                                page = 1 
                                            })">1</a>
                                        </li>
                                        @if (startPage > 2)
                                        {
                                            <li class="page-item disabled">
                                                <span class="page-link">...</span>
                                            </li>
                                        }
                                    }

                                    @for (var i = startPage; i <= endPage; i++)
                                    {
                                        <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                            <a class="page-link" href="@Url.Action("Index", new { 
                                                searchTerm = Model.SearchTerm, 
                                                sortBy = Model.SortBy, 
                                                sortOrder = Model.SortOrder, 
                                                page = i 
                                            })">@i</a>
                                        </li>
                                    }

                                    @if (endPage < Model.TotalPages)
                                    {
                                        @if (endPage < Model.TotalPages - 1)
                                        {
                                            <li class="page-item disabled">
                                                <span class="page-link">...</span>
                                            </li>
                                        }
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Index", new { 
                                                searchTerm = Model.SearchTerm, 
                                                sortBy = Model.SortBy, 
                                                sortOrder = Model.SortOrder, 
                                                page = Model.TotalPages 
                                            })">@Model.TotalPages</a>
                                        </li>
                                    }

                                    @if (Model.HasNextPage)
                                    {
                                        <li class="page-item">
                                            <a class="page-link" href="@Url.Action("Index", new { 
                                                searchTerm = Model.SearchTerm, 
                                                sortBy = Model.SortBy, 
                                                sortOrder = Model.SortOrder, 
                                                page = Model.CurrentPage + 1 
                                            })">
                                                <i class="fas fa-chevron-right"></i>
                                            </a>
                                        </li>
                                    }
                                </ul>
                            </div>
                        </nav>
                    </div>
                }
            }
            else
            {
                <div class="text-center py-5">
                    <i class="fas fa-inbox fa-3x text-muted mb-3"></i>
                    @if (!string.IsNullOrEmpty(Model.SearchTerm))
                    {
                        <h5 class="text-muted">No records found for "@Model.SearchTerm"</h5>
                        <p class="text-muted">Try adjusting your search criteria.</p>
                        <a href="@Url.Action("Index")" class="btn btn-outline-primary me-2">
                            <i class="fas fa-times me-2"></i>Clear Search
                        </a>
                    }
                    else
                    {
                        <h5 class="text-muted">No records found</h5>
                        <p class="text-muted">Start by adding your first record.</p>
                    }
                    <a asp-controller="Home" asp-action="Create" class="btn btn-primary">
                        <i class="fas fa-plus me-2"></i>Add @(Model.TotalRecords == 0 ? "First" : "New") Record
                    </a>
                </div>
            }
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i>Confirm Deletion
                </h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p class="mb-3">Are you sure you want to delete the record for:</p>
                <p class="fw-bold text-danger" id="deleteRecordName"></p>
                <p class="text-muted small mb-0">This action cannot be undone.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                    <i class="fas fa-times me-2"></i>Cancel
                </button>
                <form id="deleteForm" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <input type="hidden" name="returnUrl" value="@Context.Request.Path@Context.Request.QueryString" />
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash me-2"></i>Delete Record
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    function confirmDelete(id, name) {
        document.getElementById('deleteRecordName').textContent = name;
        document.getElementById('deleteForm').action = '@Url.Action("Delete", "Home")/' + id;

        var deleteModal = new bootstrap.Modal(document.getElementById('deleteModal'));
        deleteModal.show();
    }
</script>

<style>
    .card {
        border: none;
        border-radius: 10px;
    }

    .table th {
        border-top: none;
        font-weight: 600;
        font-size: 0.9rem;
    }

    .table td {
        vertical-align: middle;
        border-color: #e9ecef;
    }

    .table-hover tbody tr:hover {
        background-color: rgba(0, 123, 255, 0.05);
    }

    .btn-group .btn {
        margin: 0 2px;
    }

    .badge {
        font-size: 0.8rem;
    }

    .text-truncate {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .alert {
        border: none;
        border-radius: 8px;
    }

    .modal-content {
        border: none;
        border-radius: 10px;
    }

    .modal-header {
        border-radius: 10px 10px 0 0;
    }

    .pagination .page-link {
        border: none;
        color: #6c757d;
        margin: 0 2px;
        border-radius: 5px;
    }

    .pagination .page-item.active .page-link {
        background-color: #007bff;
        border-color: #007bff;
    }

    .pagination .page-link:hover {
        background-color: #e9ecef;
        color: #495057;
    }

    .table thead th a {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }

    .table thead th a:hover {
        text-decoration: underline !important;
    }
</style>